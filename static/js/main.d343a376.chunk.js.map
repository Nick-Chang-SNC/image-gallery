{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","reportWebVitals.js","index.js"],"names":["imageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","onChange","target","value","type","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","process","then","res","json","data","hits","catch","err","console","log","length","ImageCard","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAyCeA,EAvCG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,EAAOD,EAAMC,KAAKC,MAAM,KAE9B,OACE,sBAAKC,UAAU,6CAAf,UACE,qBAAKC,IAAKJ,EAAMK,aAAcC,IAAI,GAAGH,UAAU,WAC/C,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,yCAAf,sBACYH,EAAMO,QAElB,+BACE,+BACE,6CACCP,EAAMQ,SAET,+BACE,iDACCR,EAAMS,aAET,+BACE,6CACCT,EAAMU,eAIb,qBAAKP,UAAU,YAAf,SACGF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACR,uBAEEV,UAAU,2FAFZ,cAIIS,IAHGC,Y,OCEFC,EA9BK,SAAC,GAAkB,IAAD,EAAhBC,EAAgB,EAAhBA,WACpB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACE,qBAAKf,UAAU,iDAAf,SACE,sBAAMgB,SAPS,SAACC,GACdA,EAAEC,iBACFN,EAAWE,IAKad,UAAU,kBAApC,SACE,sBAAKA,UAAU,+DAAf,UACA,0BACAmB,SAAU,SAACF,GAAD,OAAOF,EAAQE,EAAEG,OAAOC,QAClCC,KAAK,OACLtB,UAAU,mHAHV,qBAIK,QAJL,4BAKY,wBALZ,IAOA,wBACAA,UAAU,0IACVsB,KAAK,SAFL,4BCgBOC,MAhCf,WACE,MAA4BV,mBAAS,IAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAAkCZ,oBAAS,GAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACA,EAAwBd,mBAAS,IAAjC,mBAAOe,EAAP,KAAaC,EAAb,KAcA,OAZAC,qBAAU,WACRC,MAAM,gCAAD,OAC6BC,qCAD7B,cACwEJ,EADxE,kCAGFK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJX,EAAUW,EAAKC,MACfV,GAAa,MAEdW,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACX,IAGF,sBAAK5B,UAAU,oBAAf,UACE,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAUe,EAAQf,OAEzCY,GAA+B,IAAlBF,EAAOkB,QAAgB,oBAAI1C,UAAU,qCAAd,6BAErC0B,EAAY,oBAAI1B,UAAU,qCAAd,wBAAqE,qBAAKA,UAAU,yBAAf,SAC/EwB,EAAOhB,KAAI,SAAAX,GAAK,OACf,cAAC8C,EAAD,CAA0B9C,MAAOA,GAAjBA,EAAM+C,aCjBjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d343a376.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst imageCard = ({ image }) => {\r\n  const tags = image.tags.split(\",\");\r\n\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\r\n      <img src={image.webformatURL} alt=\"\" className=\"w-full\" />\r\n      <div className=\"px-6 py-4\">\r\n        <div className=\"font-bold text-purple-500 text-xl mb-2\">\r\n          Photo by {image.user}\r\n        </div>\r\n        <ul>\r\n          <li>\r\n            <strong>Views: </strong>\r\n            {image.views}\r\n          </li>\r\n          <li>\r\n            <strong>Downloads: </strong>\r\n            {image.downloads}\r\n          </li>\r\n          <li>\r\n            <strong>Likes: </strong>\r\n            {image.likes}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"px-6 py-4\">\r\n        {tags.map((tag, index) => (\r\n          <span\r\n            key={index}\r\n            className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\"\r\n          >\r\n            #{tag}\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default imageCard;\r\n","import React, { useState } from \"react\";\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n  const [text, setText] = useState(\"\");\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        searchText(text);\r\n    }\r\n\r\n  return (\r\n    <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n      <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n        <div className=\"flex items-center border-b border-b-2 border-indigo-500 py-2\">\r\n        <input\r\n        onChange={(e) => setText(e.target.value)}\r\n        type=\"text\"\r\n        className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\"\r\n        type=\"text\"\r\n        placeholder=\"Search Image Term...\"\r\n        />\r\n        <button\r\n        className=\"flex-shrink-0 bg-indigo-500 hover:bg-indigo-700 border-indigo-500 hover:border-indigo-700 text-sm border-4 text-white py-1 px-2 rounded\"\r\n        type=\"submit\"\r\n        >\r\n        Search\r\n        </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageSearch;\r\n","import React, { useState, useEffect } from \"react\";\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\n      `https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`\n    )\n      .then(res => res.json())\n      .then(data => {\n        setImages(data.hits);\n        setIsLoading(false);\n      })\n      .catch(err => console.log(err));\n  }, [term]);\n\n  return (\n    <div className=\"container mx-auto\">\n      <ImageSearch searchText={(text) => setTerm(text)} />\n\n      {!isLoading && images.length === 0 && <h1 className=\"text-5xl text-center mx-auto mt-32\">No Images Found</h1>}\n\n      {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> : <div className=\"grid grid-cols-3 gap-4\">\n        {images.map(image => (\n          <ImageCard key={image.id} image={image} />\n        ))}\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}